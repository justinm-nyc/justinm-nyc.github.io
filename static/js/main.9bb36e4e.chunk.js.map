{"version":3,"sources":["components/projects/scientific-imaging-screenshots/screenshot1.png","components/projects/hpat-processing-simulator-screenshots/screenshot1.png","components/projects/jeopardy-helper-screenshots/screenshot1.png","resume/Justin_Martinelli_Technical_Resume.pdf","images/justin-m-icon-pic.jpg","images/arrow-down-circle.svg","components/projects/scientific-imaging-screenshots/screenshot2.png","components/projects/scientific-imaging-screenshots/screenshot3.png","components/projects/scientific-imaging-screenshots/screenshot4.png","components/projects/hpat-processing-simulator-screenshots/screenshot2.png","components/projects/hpat-processing-simulator-screenshots/screenshot3.png","components/projects/hpat-processing-simulator-screenshots/screenshot4.png","components/projects/jeopardy-helper-screenshots/screenshot2.png","components/projects/jeopardy-helper-screenshots/screenshot3.png","components/navbar.js","components/about.js","components/contact.js","components/home.js","components/project.js","components/projects/scientific-imaging-software.js","components/projects/HPAT-processing-simulator.js","components/projects/jeopardy-helper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomNavbar","Navbar","className","collapseOnSelect","expand","Brand","id","href","Toggle","aria-controls","Collapse","Nav","Link","target","Resume","Component","About","Container","fluid","Row","Col","lg","Image","src","thumbnailPic","roundedCircle","Contact","class","Home","Button","arrowButton","alt","width","height","title","Projects","name","position","picture","hptaProcesingSimulatorImage","link","scientificImagingSoftwareImage","jeopardyHelperImage","map","value","index","md","span","offset","Jumbotron","Project","this","props","valueFromParent","CarouselImages","images","Accordion","ContextAwareToggle","eventKey","TechnologiesList","technologies","children","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","onClick","techList","tech","imageList","image","Carousel","Item","ScientificImagingSoftware","projectData","screenshot1","screenshot2","screenshot3","screenshot4","HPATProcessingSimulator","JeopardyHelper","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9bb36e4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/screenshot1.e413c35b.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot1.0643c7b0.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot1.97285912.png\";","module.exports = __webpack_public_path__ + \"static/media/Justin_Martinelli_Technical_Resume.cd5e8707.pdf\";","module.exports = __webpack_public_path__ + \"static/media/justin-m-icon-pic.c6bfef10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down-circle.13bf544c.svg\";","module.exports = __webpack_public_path__ + \"static/media/screenshot2.0ade0a1a.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot3.884ab644.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot4.77f82df3.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot2.d55c5d97.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot3.f04c3448.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot4.4125d935.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot2.2824ebab.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot3.40fe5599.png\";","import React, { Component } from 'react';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Resume from '../resume/Justin_Martinelli_Technical_Resume.pdf';\r\n\r\nclass CustomNavbar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar className=\"border-bottom\" collapseOnSelect expand=\"lg\">\r\n                <Navbar.Brand className=\"nav-button\" id=\"nav-button\" href=\"/\">JUSTIN MARTINELLI</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n\r\n                    </Nav>\r\n                    <Nav>\r\n                        <Nav.Link className=\"nav-button\" id=\"nav-button\" href=\"/#work\">WORK</Nav.Link>\r\n                        <Nav.Link className=\"nav-button\" id=\"nav-button\" href=\"about\">ABOUT</Nav.Link>\r\n                        <Nav.Link className=\"nav-button\" id=\"nav-button\" target=\"_blank\" href={Resume}>RESUME</Nav.Link>\r\n                        <Nav.Link className=\"nav-button\" id=\"nav-button\" href=\"contact\">CONTACT</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomNavbar;\r\n","import React,  { Component } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport thumbnailPic from '../images/justin-m-icon-pic.jpg';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"content about\">\r\n                <Container fluid>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <h1 className=\"mb-4 about-title\">ABOUT ME</h1>\r\n                    </Row>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col lg={8}>\r\n                            <Image className=\"icon-pic\" src={thumbnailPic} roundedCircle />\r\n                            <p>I am a life long learner, reader, traveler, documentary lover, humanitarian, and software engineer. I love learning new ways of building things.<br></br> <br></br>\r\n                            I enjoy working collaboratively with talented and knowledgeable people and exchanging new skills. I'm always aiming to grow in as many ways possible. <br></br><br></br>\r\n                            Feel to reach out to me via <a href=\"mailto:justinmartinelli1@gmail.com\">email</a> or follow me on <a href=\"https://www.linkedin.com/in/justin-martinelli-nyc\">Linkedin</a> or <a href=\"https://github.com/justinm-nyc\">Github</a>.\r\n                            </p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contact-div\">\r\n                <Container fluid>\r\n                    <Row className=\"justify-content-md-center contact-row\">\r\n                        <div className=\"contact-inner-div\">\r\n                            <h1 className=\"mb-4 contact-title\">CONTACT ME</h1>\r\n                            <Col lg={6}>\r\n                                <ul class=\"contact-info\">\r\n                                    <li class=\"phone\"><a href=\"tel:7187576212\">(718)7576212</a></li>\r\n                                    <li class=\"email\"><a href=\"mailto:justinmartinelli1@gmail.com\">justinmartinelli1@gmail.com</a></li>\r\n                                    <li class=\"linkedin\"><a href=\"https://www.linkedin.com/in/justin-martinelli-nyc\">LinkedIn</a></li>\r\n                                    <li class=\"github\"><a href=\"https://github.com/justinm-nyc\">GitHub</a></li>\r\n                                </ul>\r\n                            </Col>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React,  { Component } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport arrowButton from '../images/arrow-down-circle.svg';\r\nimport scientificImagingSoftwareImage from './projects/scientific-imaging-screenshots/screenshot1.png';\r\nimport hptaProcesingSimulatorImage from './projects/hpat-processing-simulator-screenshots/screenshot1.png';\r\nimport jeopardyHelperImage from './projects/jeopardy-helper-screenshots/screenshot1.png';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content display-flex\">\r\n                    <div>\r\n                        <Col className=\"intro-column\">\r\n                            <h1>Hi, I'm Justin.</h1>\r\n                            <h4 className=\"home-pt-2\">I'm a software engineer with experience designing and building user interfaces for web and mobile applications. </h4>\r\n                            <h4>Want to collaborate?</h4>\r\n                            <a href=\"/contact\"><Button className=\"contact-me-button\">Contact Me</Button></a>\r\n                        </Col>\r\n                        <Col className=\"arrow-column\">\r\n                            <h4>Check out some of my work below</h4>\r\n                            <Image className=\"arrow-button\" src={arrowButton} alt=\"\" width=\"32\" height=\"32\" title=\"Bootstrap\"/>\r\n                        </Col>\r\n                    </div>\r\n                </div>\r\n                <div id=\"work\" className=\"work-content\">\r\n                    <Container fluid>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col lg={6}>\r\n                            <h1 className=\"work-title border-bottom pb-3 mb-4\">WORK</h1>\r\n                        </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <Projects></Projects>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\nclass Projects extends Component {\r\n    render(){\r\n    const Projects =[\r\n        { \r\n            name: 'High Performance Autonomous Transaction Processing Simulator',\r\n            position: 'Software Engineer',\r\n            picture: hptaProcesingSimulatorImage,\r\n            link: '/HPAT-processing-simulator'\r\n            \r\n        },\r\n        { \r\n            name: 'Scientific Imaging Software ',\r\n            position: 'Software Engineer',\r\n            picture: scientificImagingSoftwareImage,\r\n            link: '/scientific-imaging-software'\r\n            \r\n        },\r\n                { \r\n            name: 'Jeopardy Helper',\r\n            position: 'Full Stack Engineer',\r\n            picture: jeopardyHelperImage,\r\n            link: '/jeopardy-helper'\r\n            \r\n        }\r\n    ]\r\n    return (\r\n      <Container fluid>\r\n        {Projects.map((value, index) => {\r\n          return  <div className=\"projects\">\r\n\r\n            <Col md={{ span: 8, offset: 2 }}>\r\n            <Jumbotron fluid className=\"p-md-5 rounded\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"project-details-col\" lg={8}>\r\n                            <a className=\"project-name\" href={value.link}>\r\n                                <h1>{value.name}</h1> \r\n                            </a>\r\n                            <h5 className=\"title-description\">{value.position}</h5>\r\n                            <a href={value.link}>Learn more</a>\r\n                        </Col>\r\n                        <Col lg={4}>\r\n                            <Image fluid className=\"image-border\" src={value.picture} alt=\"\" title=\"Bootstrap\"/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Jumbotron>\r\n\r\n            </Col>\r\n        </div>\r\n        })}\r\n      </Container>\r\n    )\r\n    }\r\n  };\r\n\r\n\r\n  ","import React, { Component, useContext } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport AccordionContext from 'react-bootstrap/AccordionContext';\r\nimport {useAccordionToggle} from 'react-bootstrap/AccordionToggle';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Project extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n        <div>\r\n        <Container fluid>\r\n            <div>\r\n                <Container fluid>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col lg={6}>\r\n                               <h1 className=\"work-title border-bottom pb-3 mb-4\">{this.props.valueFromParent[0]}</h1>\r\n                            </Col>\r\n                        </Row>\r\n                </Container>\r\n            </div>\r\n            <div className=\"projects\">\r\n                <Col md={{ span: 8, offset: 2 }}>\r\n                    <Container className=\"mb-4 pb-3\">\r\n                    <CarouselImages images={this.props.valueFromParent[5]}></CarouselImages>\r\n                    </Container>\r\n                </Col>\r\n                <Col md={{ span: 8, offset: 2 }}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"project-details-col\" lg={6}>\r\n                                <h1 className=\"project-name\">Description</h1> \r\n                                <p>{this.props.valueFromParent[1]}</p>\r\n                                <Accordion>\r\n                                    <ContextAwareToggle eventKey=\"0\"></ContextAwareToggle>\r\n                                    <Accordion.Collapse  eventKey=\"0\"><p>{this.props.valueFromParent[2]}</p>\r\n                                    </Accordion.Collapse>\r\n                                </Accordion>\r\n                            </Col>\r\n                            <Col className=\"project-details-col\" lg={6}>\r\n                                <h1 className=\"project-name\">Role</h1> \r\n                                <p>{this.props.valueFromParent[3]}</p>\r\n                                <h1 className=\"project-name\">Technologies</h1>\r\n                                <TechnologiesList technologies={this.props.valueFromParent[4]}></TechnologiesList>\r\n                                <a href={this.props.valueFromParent[6]}><h1 className=\"project-github-link\">GitHub Link</h1></a>\r\n                                <p>{this.props.valueFromParent[7]}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </div>\r\n\r\n        </Container>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;\r\n\r\nfunction ContextAwareToggle({ children, eventKey, callback }) {\r\n    const currentEventKey = useContext(AccordionContext);\r\n  \r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey),\r\n    );\r\n\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n    \r\n    return (\r\n        <div className=\"expand-button\">\r\n            {isCurrentEventKey ? (\r\n                <Button\r\n                onClick={decoratedOnClick}>\r\n                Hide Full Description\r\n                </Button>\r\n            ) : (\r\n                <Button\r\n                onClick={decoratedOnClick}>\r\n                Read Full Description\r\n                </Button>\r\n            )}\r\n        </div>\r\n        );\r\n      }\r\n\r\n\r\nfunction TechnologiesList({technologies}){\r\n    var techList = technologies.map(function(tech){\r\n                    return <li>{tech}</li>;\r\n                    })\r\n                    \r\n    return (\r\n        <ul>{ techList }</ul>\r\n    )\r\n}\r\n\r\nfunction CarouselImages({images}){\r\n    var imageList = images.map(function(image){\r\n                    return <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src={image}\r\n                    alt=\"Slide\"\r\n                    />\r\n                </Carousel.Item>\r\n                    })\r\n                    \r\n    return (\r\n        <Carousel>{ imageList } </Carousel>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Project from '../project.js';\r\nimport screenshot1 from './scientific-imaging-screenshots/screenshot1.png';\r\nimport screenshot2 from './scientific-imaging-screenshots/screenshot2.png';\r\nimport screenshot3 from './scientific-imaging-screenshots/screenshot3.png';\r\nimport screenshot4 from './scientific-imaging-screenshots/screenshot4.png';\r\n\r\nclass ScientificImagingSoftware extends Component {\r\n\r\n    render() {\r\n        const projectData = [\r\n            'SCIENTIFIC IMAGING SOFTWARE',\r\n            'The Scientific Imaging Software utilizes Oracle Blockchain Cloud Service and Object Storage to automatically upload and track data streamed from laboratory equipment.',\r\n            // eslint-disable-next-line\r\n            \"In the scientific industry, laboratories face many challenges involving data integrity, data access, and data tracking. As a chief technology officer for a scientific laboratory, you need to understand who has access to your data, information on where that data has been accessed, and that data all needs to be auditable. Using the blockchain cloud service, an immutable ledger, you can permit access to that data and allow other people to come and audit that data directly. \\n\\nAfter taking an image of a slide with the USB microscope, that information is stored in object storage and a record of that image is going to be placed onto the blockchain. Then we use a web interface to view the information on the blockchain, update that blockchain and get a full and detailed history of everything that is stored on the blockchain. \\n\\nThe image that was captured is then populated on the interface, it can be downloaded for analysis, and the analysis document can then be uploaded using the interface. All these events like downloading and uploading are saved to the blockchain, thus when you click the \\'View History\\' button, you can see a table populated with the document\\'s history from the blockchain. The Oracle Blockchain Cloud Service is used to store all data that is generated, all analysis and report documents, and a history of the data that is accessed. Oracle Object Storage is utilized to store and persist the data. The Oracle Scientific Imaging interface shows us how we can use blockchain to maintain a secure distributed ledger that provides value across the business from data collection, tracking, to auditing.\",\r\n            \"Software Engineer\\n\\nI created the frontend of the application, created the REST API to get and put information on the blockchain, created the API to store documents and retrieve documents from object storage, and wrote chaincode for the blockchain in go.\",\r\n            ['Vue', 'Node','Express','HTML5', 'CSS3', 'Bootstrap','Go', 'Docker', 'Kubernetes', 'Oracle Blockchain Cloud Service', 'Oracle Object Storage'],\r\n            [screenshot1,screenshot2,screenshot3,screenshot4],\r\n            '',\r\n            'The repository with this code is not public for propietary reasons but I can be contacted for more insight on the code for this project.'\r\n        ];\r\n\r\n        return (\r\n        <div>\r\n            <Project valueFromParent={projectData}></Project>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScientificImagingSoftware;\r\n","import React, { Component } from 'react';\r\nimport Project from '../project.js';\r\nimport screenshot1 from './hpat-processing-simulator-screenshots/screenshot1.png';\r\nimport screenshot2 from './hpat-processing-simulator-screenshots/screenshot2.png';\r\nimport screenshot3 from './hpat-processing-simulator-screenshots/screenshot3.png';\r\nimport screenshot4 from './hpat-processing-simulator-screenshots/screenshot4.png';\r\n\r\nclass HPATProcessingSimulator extends Component {\r\n\r\n    render() {\r\n        const projectData = [\r\n            'HIGH PERFORMANCE AUTONOMOUS TRANSACTION ENTERPRISE SIMULATOR',\r\n            'Ten Thousand Monkeys is a full stack application that uses server-less Oracle provided service, Functions, to simulate enterprise workloads running on an Oracle Autonomous Transaction Processing instance.',\r\n            // eslint-disable-next-line\r\n            \"A user chooses to run transactions on an ATP with healthcare survey data or an ATP for an eCommerce business. The user then has the options of ramp, burst, and steady to choose from as the workload profile over a short period of time. Ramp, burst, and steady represent the pattern of user activity for the enterprise workload (e.g. steady like a slow day, ramp like a normal busy day, burst like a holiday or during peak season). Then the user can choose from 1,500 to 10,000 users that will be inserting, update, and reporting within a short span of time. The results of whether the transactions were successes or failures are then populated in graphs.\",\r\n            \"Software Engineer\\n\\nI created the frontend of the application, wrote the artillery script that would run transactions and populate information into the database. I wrote the docker files that ran the server and the client in separate folders. I created the yaml files to deploy the docker images to the Oracle Kubernetes Engine.\",\r\n            ['Vue', 'Node','Express','HTML5', 'CSS3', 'Bootstrap','Docker', 'Artillery', 'SQL','Oracle Functions','Oracle Cloud Infrastructure Registry', 'Oracle Autonomous Transaction Processing' ],\r\n            [screenshot1,screenshot2,screenshot3,screenshot4],\r\n            'https://github.com/justinm-nyc/EnterpriseSimulator',\r\n            'This is the link to the repository of a version of the Enterprise Simulator that is just the frontend and not connected to the backend for propietary reasons.'\r\n        ];\r\n\r\n        return (\r\n        <div>\r\n            <Project valueFromParent={projectData}></Project>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HPATProcessingSimulator;\r\n","import React, { Component } from 'react';\r\nimport Project from '../project.js';\r\nimport screenshot1 from './jeopardy-helper-screenshots/screenshot1.png';\r\nimport screenshot2 from './jeopardy-helper-screenshots/screenshot2.png';\r\nimport screenshot3 from './jeopardy-helper-screenshots/screenshot3.png';\r\n\r\nclass JeopardyHelper extends Component {\r\n\r\n    render() {\r\n        const projectData = [\r\n            'JEOPARDY HELPER',\r\n            'The Jeopardy Helper is a simple application that allows participant teams to know which ones clicked the buzzer',\r\n            // eslint-disable-next-line\r\n            \"The Jeopardy Helper application was created during my time at Oracle in order for the employees to be able to play a jeopardy activity. I created it so that the players on each team could have a buzzer-like application. One person adds their team name to the application and then each player on that respective team selects their team name. Once it is time to answer, they can click the buzzer button and then a list is populated with the teams that buzzed in and their order. The team names and buzzer times are all saved to the database. The application was created so that everyone could go on a website and participate in the game. The application is responsive and so depending on whether it is accessed from a phone or a computer, the appearance changes.\",\r\n            \"Full Stack Engineer\\n\\nI created the frontend and the API to communicate with the MongoDB database.\",\r\n            ['Vue','Node','Express', 'MongoDB','HTML5','CSS3','Bootstrap'],\r\n            [screenshot1,screenshot2,screenshot3],\r\n            'https://github.com/justinm-nyc/jeapardy-helper',\r\n            \"\"\r\n        ];\r\n\r\n        return (\r\n        <div>\r\n            <Project valueFromParent={projectData}></Project>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JeopardyHelper;\r\n","import React from 'react';\r\nimport CustomNavbar from './components/navbar.js';\r\nimport About from './components/about.js';\r\nimport Contact from './components/contact.js';\r\nimport Home from './components/home.js';\r\nimport ScientificImagingSoftware from './components/projects/scientific-imaging-software.js';\r\nimport HPATProcessingSimulator from './components/projects/HPAT-processing-simulator.js';\r\nimport JeopardyHelper from './components/projects/jeopardy-helper.js';\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport './css/App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header sticky-top\">\r\n          <CustomNavbar></CustomNavbar>\r\n        </header>\r\n        <div className=\"\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact />\r\n            </Route>\r\n            <Route path=\"/scientific-imaging-software\">\r\n              <ScientificImagingSoftware />\r\n            </Route>\r\n            <Route path=\"/HPAT-processing-simulator\">\r\n              <HPATProcessingSimulator />\r\n            </Route>\r\n            <Route path=\"/jeopardy-helper\">\r\n              <JeopardyHelper />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}